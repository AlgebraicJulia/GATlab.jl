var documenterSearchIndex = {"docs":
[{"location":"api/#Library-Reference","page":"Library Reference","title":"Library Reference","text":"","category":"section"},{"location":"api/","page":"Library Reference","title":"Library Reference","text":"Modules = [Gatlab,\n  Gatlab.Util  ,\n  Gatlab.Util.Lists  ,\n  Gatlab.Util.Names  ,\n  Gatlab.Syntax,\n  Gatlab.Syntax.Theories,\n  Gatlab.Syntax.TheoryMaps,\n  Gatlab.Syntax.Pushouts,\n  Gatlab.Syntax.Visualization,\n  Gatlab.Logic ,\n  Gatlab.Logic.EGraphs,\n  Gatlab.Logic.EMatching,\n  Gatlab.Logic.ContextMaps,\n  Gatlab.Models,\n  Gatlab.Models.ModelInterface,\n  Gatlab.Models.Interpret,\n  Gatlab.Dsl   ,\n  Gatlab.Dsl.TheoryMacros           ,\n  Gatlab.Dsl.ContextMaps            ,\n  Gatlab.Dsl.ModelImplementations   ,\n  Gatlab.Stdlib,\n  Gatlab.Stdlib.Categories,\n  Gatlab.Stdlib.Algebra,\n  ]","category":"page"},{"location":"stdlib/#Standard-Library","page":"Standard Library","title":"Standard Library","text":"","category":"section"},{"location":"stdlib/","page":"Standard Library","title":"Standard Library","text":"Modules = [Gatlab.Stdlib,\n  Gatlab.Stdlib.Categories,\n  Gatlab.Stdlib.Algebra,\n  ]","category":"page"},{"location":"stdlib/#Gatlab.Stdlib.StdTheories.Categories.TypedHom","page":"Standard Library","title":"Gatlab.Stdlib.StdTheories.Categories.TypedHom","text":"Any implementor of TypedHom{Ob, Hom} should have precisely the fields\n\ndom::Ob\ncodom::Ob\nmorphism::Hom\n\nThe reason this is not a struct is that we want to be able to control the name of the type.\n\n\n\n\n\n","category":"type"},{"location":"#Gatlab.jl","page":"Gatlab.jl","title":"Gatlab.jl","text":"","category":"section"},{"location":"","page":"Gatlab.jl","title":"Gatlab.jl","text":"CurrentModule = Gatlab","category":"page"},{"location":"","page":"Gatlab.jl","title":"Gatlab.jl","text":"Gatlab.jl is a Julia library for...","category":"page"}]
}
